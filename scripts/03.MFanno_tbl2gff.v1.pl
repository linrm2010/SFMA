#! /usr/bin/perl -w
################################################################################
# MFanno_tbl2gff.pl version 1.0
# Copyright (C) Runmao Lin, Tong Liu, Xiaoting Wang, Fanxing Yang, Zhiyin Wang, 2023
# Contact (E-mail): linrunmao@hainanu.cn
#
# This program is provided under the terms of a personal license to the recipient and
# may only be used for the recipient's own research at an academic insititution.
#
# For using this program in a company or for commercial purposes, a commercial license
# is required.
#
# The purpose of this program is to update gff file generated by MFanno.
################################################################################

use strict;
use warnings;
use Getopt::Long;
use Data::Dumper;

my $mfannot_tbl;
my $output_prefix;
my $help;

GetOptions
(
	"mfannot_tbl=s" => \$mfannot_tbl,                         # string
	"output_prefix=s" => \$output_prefix,                     # string
	"help" => \$help                                          # flag
);

################################################################################
# usage
############################# usage begin ######################################
my $usage= << "USAGE";

Example: perl $0 -mfannot_tbl  mfannot.new.tbl  -output_prefix  mfanno_update 
version: 1.0
Options:
        -mfannot_tbl <file>               mitos gff file, such as 'mfannot.new.tbl'
        -output_prefix <strings>               such as 'mfanno_update'
        -help                                  print help information

USAGE
############################## usage end #######################################

if ($help || !(defined $mfannot_tbl) || !(defined $output_prefix))
{
	print $usage;
	exit;
}

my @months = qw(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec);
my ($timesecond, $timeminute, $timehour, $timedaymonths, $timemonth, $timeyear, $timedayweek, $timedayYear, $timedaylightsavings) = localtime();
$timeyear+=1900;

print "[$timehour\:$timeminute\:$timesecond\, $months[$timemonth] $timedaymonths\, $timeyear] ";
print "Start to run the \'$0\' program ...\n";

################################################################################
# Reading 'mfannot_tbl'
################################################################################

print "Reading '$mfannot_tbl' file ...\n";

# >Feature C_0 Table1
#25397	28486	gene
#			gene	cox1
#25397	26677	CDS
#28172	28486
#			product	cytochrome c oxidase subunit 1
#			protein_id	lcl| G-cox1
#			EC_number	1.9.3.1
#1672	1740	gene
#			gene	trnF(aaa)
#1672	1740	tRNA
#			product	transfer RNA Phenylalanine
#			protein_id	lcl| G-trnF
#			anticodon	(pos:1703..1705,aa:f)
#3446	4944	gene
#			gene	rns
#3446	4944	rRNA
#			product	small subunit ribosomal RNA
#			protein_id	lcl| G-rns

open OA,">$output_prefix\.gene.gff";
open OB,">$output_prefix\.tRNA.gff";
open OC,">$output_prefix\.rRNA.gff";

my $seq_id="";
my $gene_id="";
my $strand="+";
my $gene_begin=0;
my $gene_end=0;
open G,"$mfannot_tbl" || die "Cannot open the file '$mfannot_tbl'.\n";
while(<G>)
{
	chomp;
	my @sp=split(/\t/,$_);
	if($_=~/^>Feature/)
	{
		$seq_id=(split(/\s+/,$sp[0]))[1];
	}
	if((scalar @sp)==3 && $_=~/\tgene$/)
	{
		if($sp[0]<$sp[1])
		{
			$strand="+";
			$gene_begin=$sp[0];
			$gene_end=$sp[1];
		}
		else
		{
			$strand="-";
			$gene_begin=$sp[1];
			$gene_end=$sp[0];
		}
		my $cds_tag=0;
		my $tRNA_tag=0;
		my $rRNA_tag=0;
		my $cds_infor="";
		my $exon_infor="";
		while(<G>)
		{
			last if ($_=~/\tproduct\t/);
			chomp;
			my @gsp=split(/\t/,$_);
			if($_=~/			gene	/)
			{
				$gene_id=$gsp[-1];
			}
			elsif((scalar @gsp)==3 && $_=~/\tCDS$/)
			{
				$cds_tag=1;
				if($strand eq "+")
				{
					$cds_infor.="$seq_id\tMFAnnot\tCDS\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=CDS:$gene_id\;Parent=mRNA:$gene_id\n";
					$exon_infor.="$seq_id\tMFAnnot\texon\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=exon:$gene_id\;Parent=mRNA:$gene_id\n";
				}
				else
				{
					$cds_infor.="$seq_id\tMFAnnot\tCDS\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=CDS:$gene_id\;Parent=mRNA:$gene_id\n";
					$exon_infor.="$seq_id\tMFAnnot\texon\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=exon:$gene_id\;Parent=mRNA:$gene_id\n";
				}
			}
			elsif((scalar @gsp)==3 && $_=~/\ttRNA$/)
			{
				$tRNA_tag=1;
				if($strand eq "+")
				{
					print OB "$seq_id\tMFAnnot\ttRNA\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=tRNA:$gene_id\;Name=$gene_id\n";
				}
				else
				{
					print OB "$seq_id\tMFAnnot\ttRNA\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=tRNA:$gene_id\;Name=$gene_id\n";
				}
			}
			elsif((scalar @gsp)==3 && $_=~/\trRNA$/)
			{
				$rRNA_tag=1;
				if($strand eq "+")
				{
					print OC "$seq_id\tMFAnnot\trRNA\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=rRNA:$gene_id\;Name=$gene_id\n";
				}
				else
				{
					print OC "$seq_id\tMFAnnot\trRNA\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=rRNA:$gene_id\;Name=$gene_id\n";
				}
			}
			elsif($cds_tag==1 && $gsp[0] ne "")
			{
				if($strand eq "+")
				{
					$cds_infor.="$seq_id\tMFAnnot\tCDS\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=CDS:$gene_id\;Parent=mRNA:$gene_id\n";
					$exon_infor.="$seq_id\tMFAnnot\texon\t$gsp[0]\t$gsp[1]\t\.\t+\t\.\tID=exon:$gene_id\;Parent=mRNA:$gene_id\n";
				}
				else
				{
					$cds_infor.="$seq_id\tMFAnnot\tCDS\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=CDS:$gene_id\;Parent=mRNA:$gene_id\n";
					$exon_infor.="$seq_id\tMFAnnot\texon\t$gsp[1]\t$gsp[0]\t\.\t-\t\.\tID=exon:$gene_id\;Parent=mRNA:$gene_id\n";
				}
			}
		}
		if($cds_infor ne "")
		{
			print OA "$seq_id\tMFAnnot\tgene\t$gene_begin\t$gene_end\t\.\t$strand\t\.\tID=gene:$gene_id\;Name=$gene_id\n";
			print OA "$seq_id\tMFAnnot\tmRNA\t$gene_begin\t$gene_end\t\.\t$strand\t\.\tID=mRNA:$gene_id\;Name=$gene_id\;Parent=gene\:$gene_id\n";
			print OA $cds_infor;
			print OA $exon_infor;
		}
	}
}
close G;
close OA;
close OB;
close OC;

($timesecond, $timeminute, $timehour, $timedaymonths, $timemonth, $timeyear, $timedayweek, $timedayYear, $timedaylightsavings) = localtime();
$timeyear+=1900;
print "[$timehour\:$timeminute\:$timesecond\, $months[$timemonth] $timedaymonths\, $timeyear] ";
print "End of running the \'$0\' program.\n";

__END__
